When user creating environment by the older version of conda-env-mod, they create modules that are using the version of python from the base Anaconda. We change this behavior of the new Conda environment, generated by conda-env-mod, to use the specific version of python when creating the module.

There are three new optional arguments for this feature.

The first one is -b|--base-python. This allows users to use python from the base Anaconda module.

The second and third one are --local-py|--local-python and --add-path |--add-to-path. This is the default behavior of conda-env-mod now. It lets users to use python from the created environment.

In the code, 
    From line 70-71, the new arguments are added to the usage information.
    From line 569-572, the switch case statement check which argument the user is using when creating the file. 
        If -b|--base-python is used, Opt_LOCAL_PY will become 0, meaning the user wants to use python from base Anaconda module. 
        If --local-py|--local-python or --add-path |--add-to-path is used, Opt_LOCAL_PY will become 1, meaning the user wants to use python from the environment created. (Default Behavior)
    From line 298-311 is the part where a if statement is used to check the value of Opt_LOCAL_PY.
        If Opt_LOCAL_PY == 0, we will hardcode this part to the module file.
            -- This line is deliberately commented out.
			-- We want to use Python from base Anaconda.
			-- prepend_path("PATH",modroot.."/bin")
        If Opt_LOCAL_PY == 1, we will hardcode this part to the module file.
            -- Now using python from the environment is the default behavior
			prepend_path("PATH",modroot.."/bin")
    
    Note: "prepend_path("PATH",modroot.."/bin")" set the path of python to the bin of environment.